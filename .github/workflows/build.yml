name: build

on:
  push:
    branches:
      - master
      - 'renovate/**'

  pull_request:

env:
  # https://github.com/chalk/supports-color/issues/106
  FORCE_COLOR: true
  NODE_VERSION: 12
  YARN_CACHE_KEY: v2

jobs:
  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: github-cleanup
        uses: renovatebot/internal-tools@v0
        continue-on-error: true
        with:
          command: github-cleanup
          token: ${{ secrets.GH_TOKEN }}
  compile:
    needs: [cleanup]
    runs-on: ubuntu-latest

    timeout-minutes: 10

    steps:
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Init platform
        id: init
        run: |
          echo "::set-output name=yarn_cache::$(yarn cache dir)"

      - uses: actions/checkout@v2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.init.outputs.yarn_cache }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      # Clear caches on cache miss, otherwise they will grow indefinitely
      - name: Clear yarn cache
        if: github.ref == 'refs/heads/master' && steps.yarn_cache_packages.outputs.cache-hit != 'true'
        run: yarn cache clean

      - name: Build
        run: yarn install --frozen-lockfile --link-duplicates

      - uses: actions/upload-artifact@v2
        with:
          name: builder
          path: dist/

  build:
    needs: [compile]
    runs-on: ubuntu-latest

    # timeout-minutes: 60

    strategy:
      matrix:
        ubuntu_version: [18.04, 20.04]

    env:
      UBUNTU_VERSION: ${{ matrix.ubuntu_version }}

    steps:
      - name: docker-config
        uses: renovatebot/internal-tools@v0
        with:
          command: docker-config

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: builder
          path: ./dist

      - name: Prepare
        run: |
          git fetch origin data
          git worktree add --track -b data ./data origin/data

      - name: Build builder
        run: |
          docker buildx build --load -t builder --build-arg UBUNTU_VERSION .

      - name: python-builder
        uses: ./actions/builder/

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.ubuntu_version }}
          path: .cache/*.tar.xz

  publish:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          path: ./.cache

      - uses: actions/download-artifact@v2
        with:
          name: builder
          path: ./dist

      - name: Prepare
        run: |
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          git fetch origin data
          git worktree add --track -b data ./data origin/data

      - name: Release
        if: ${{github.ref == 'refs/heads/master'}}
        run: |
          set -ex
          if [[ ! -d "./.cache" ]]; then
            echo "No new files! Skipping release"
            exit 0
          fi
          shopt -s globstar
          cp --parents -R ./.cache/**/*.tar.xz ./data/
          pushd ./data
          git add .
          git diff-index --quiet HEAD || git commit -m "updated builds"
          git push -f origin data:data
